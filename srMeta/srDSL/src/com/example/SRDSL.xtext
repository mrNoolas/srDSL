grammar com.example.SRDSL with org.eclipse.xtext.common.Terminals

generate sRDSL "http://www.example.com/SRDSL"

Missions: 'Missions' name=ID
	missions += Mission+
; 

Mission: 'Mission:' name=ID
	movement_sequence += Movement+
;

Movement: 
	// keep doing the things in the movement (iterate) until the condition is met; abort the movement if the condition is met.
	movement += Move+ 'until' conditions += Condition+ 
;

Move :
	// amount is the number of degrees for a 
	'Move' dir = Direction;

Direction: ForwardForMove | {Direction} ForwardMove | BackwardForMove | LeftForMove | {Direction} LeftMove | RightForMove | {Direction} RightMove | {Direction} RandomMove
;
ForwardForMove: 'forward' 'for' distance = INT;
ForwardMove: 'forward';
BackwardForMove: 'backward' 'for' distance = INT;
LeftForMove: 'left' 'for' degrees = INT;
LeftMove: 'left';
RightForMove: 'right' 'for' degrees = INT;
RightMove: 'right';
RandomMove: 'randomly';

Condition: ColorCondition | DistanceCondition | TouchCondition | {Condition} ButtonPressCondition;

ColorCondition: color = Color 'color' 'is' 'found';
enum Color: RED | YELLOW | BLUE | BLACK | WHITE;

DistanceCondition:  DistanceConditionLT | DistanceConditionGT;
DistanceConditionLT: 'distance' 'less' 'than' distance = INT;
DistanceConditionGT: 'distance' 'greater' 'than' distance = INT;

TouchCondition: TouchLeftCondition | TouchRightCondition | TouchBothCondition;
enum Pressed: TRUE = 'is' | FALSE = 'is not';
TouchLeftCondition: 'the' 'left' 'buffer' isPressed = Pressed 'pressed';
TouchRightCondition: 'the' 'right' 'buffer' isPressed = Pressed 'pressed';
TouchBothCondition: 'both' 'the' 'left' 'and' 'right' 'buffer' isPressed = Pressed 'pressed';

ButtonPressCondition: 'the' 'user' 'presses' 'the' 'button';
